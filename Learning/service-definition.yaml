# FUNÇÃO: Fornecer atualização declarativa para pods e ReplicaSets
# OBS.: O service já cria um replicaset, que vai criar os pods

# Create a Service named redis-service of type ClusterIP to expose pod redis on port 6379
# kubectl expose pod redis --port=6379 --name redis-service --dry-run=client -o yaml
# or
# kubectl create service clusterip redis --tcp=6379:6379 --dry-run=client -o yaml

# Create a Service named nginx of type NodePort to expose pod nginx's port 80 on port 30080 on the nodes:
# kubectl expose pod nginx --type=NodePort --port=80 --name=nginx-service --dry-run=client -o yaml
# Or
# kubectl create service nodeport nginx --tcp=80:80 --node-port=30080 --dry-run=client -o yaml

# CRIAR:
# kubectl create -f service-definition.yaml

# LISTAR:
# kubectl get services

# LISTAR TUDO:
# kubectl get all

# EDITAR:
# kubectl edit service myapp-service

# DELETE: "também deleta os pods e o replicaset"
# kubectl delete services myapp-service

apiVersion: v1
kind: Service
metadata:
  name: myapp-service
  labels:
    app: myapp-service
spec:
  type: ClusterIP
  ports:
  - targetPort: 80 # Porta em que o pod está exposto
    port: 80
  selector: # Se refere ao Pod
    app: myapp
    type: back-end
